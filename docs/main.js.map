{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'four-card-feature-section';\n}\n","<main id=\"main-container\">\n    \n  <div id=\"presentation-box\">\n    <h2 class=\"h2-first-line\">Reliable, efficient delivery</h2>\n    <h2 class=\"h2-second-line\">Powered by Technology</h2>\n    <p class=\"p\">Our Artificial Intelligence powered tools use millions of project data points \n      to ensure that your project is successful</p>\n    \n  </div>\n\n  <div id=\"boxes-section\">\n    <div class=\"main-box\" id=\"item-1\">\n      <div class=\"ribbon light-blue\"></div>\n      <div class=\"box-description\">\n        <h3 class=\"h3\">Supervisor</h3>\n        <p class=\"p\">Monitors activity to identify project roadblocks</p>\n        <svg src=\"/src/assets/icon-supervisor.svg\" class=\"item-svg item-1-svgImg\"></svg>\n      </div>\n    </div>\n\n    <div class=\"main-box\" id=\"item-2\">\n      <div class=\"ribbon red\"></div>\n      <div class=\"box-description\">\n        <h3 class=\"h3\">Team Builder</h3>\n        <p class=\"p\">Scans our talent network to create the optimal team for your project</p>\n        <svg class=\"item-svg item-2-svgImg\"></svg>\n      </div>\n    </div>\n    \n    <div class=\"main-box\" id=\"item-3\">\n      <div class=\"ribbon orange\"></div>\n      <div class=\"box-description\">\n        <h3 class=\"h3\">Karma</h3>\n        <p class=\"p\">Regularly evaluates our talent to ensure quality</p>\n        <svg class=\"item-svg item-3-svgImg\"></svg>\n      </div>\n    </div>\n\n    <div class=\"main-box\" id=\"item-4\">\n      <div class=\"ribbon dark-blue\"></div>\n      <div class=\"box-description\">\n        <h3 class=\"h3\">Calculator</h3>\n        <p class=\"p\">Uses data from past projects to provide better delivery estimates</p>\n        <svg class=\"item-svg item-4-svgImg\"></svg>\n      </div>  \n    </div>\n  </div>\n</main>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}